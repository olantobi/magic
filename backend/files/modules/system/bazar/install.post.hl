
/*
 * Installs the specified Bazar module into the local server.
 *
 * Notice, this will only download the specified ZIP file, extract
 * it, and correctly rename it - But not run startup files for module.
 * Hence, after you've invoked this file, you should invoke the
 * '/system/file-system/install' PUT file.
 */
.arguments
   url:string
   name:string
.description:Installs the specified Bazar module into the local server

/*
 * Ensures user is authorized to access endpoint.
 */
auth.ticket.verify:root

/*
 * Sanity checking invocation.
 */
validators.mandatory:x:@.arguments/*/url
validators.mandatory:x:@.arguments/*/name

/*
 * Verifying that folder doesn't already exist, as in that module
 * is already installed.
 */
strings.concat
   .:/modules/
   get-value:x:@.arguments/*/name
   .:/
if
   io.folder.exists:x:@strings.concat
   .lambda

      /*
       * Oops ...
       */
      throw:Module is already installed. If you wish to update the module please uninstall it first.
         public:bool:true
         status:int:500

/*
 * Downloading zip file as binary content from specified URL.
 */
http.get.binary:x:@.arguments/*/url

/*
 * Saving file to modules folder using the 'filename' argument specified
 * by its HTTP Content-Disposition header.
 */
strings.split:x:@http.get.binary/*/headers/*/Content-Disposition
   .:=
strings.trim:x:@strings.split/1
   .:"\""
strings.concat
   .:/modules/
   get-value:x:@strings.trim
io.file.save.binary:x:@strings.concat
   get-value:x:@http.get.binary/*/content

/*
 * Unzipping downloaded ZIP file.
 */
io.file.unzip:x:@strings.concat

/*
 * Deleting ZIP file.
 */
io.file.delete:x:@strings.concat

/*
 * Checking if the ZIP file resulted in creating the module folder,
 * otherwise renaming folder accordingly.
 */
.module-folder
set-value:x:@.module-folder
   strings.concat
      .:/modules/
      get-value:x:@.arguments/*/name
      .:/
if
   not
      io.folder.exists:x:@.module-folder
   .lambda

      /*
       * Renaming the folder to the name specified by caller.
       */
      strings.split:x:@strings.concat
         .:.zip
      io.folder.move:x:@strings.split/0
         get-value:x:@.module-folder

/*
 * Returning success to caller.
 */
return
   result:success
